[project]
name = "nhp-dwiproc"
description = "BIDS app for performing diffusion processing of NHP dataset(s)"
authors = [{name = "Jason Kai", email = "jason.kai@childmind.org"}]
license = "MIT"
readme = "README.md"
dynamic = ["version"]
requires-python = ">=3.11, <3.13"
dependencies = [
  "bids2table[s3]>=2.1.2",
  "niwrap>=0.6.1",
  "niwrap-helper>=0.5.1",
  "polars>=1.33.1",
  "typer>=0.19.2",
  "eddymotion>=0.1.15",
  # (Temporary) pinned versions of packages to fix errors
  "nitransforms==24.0.1"
]
keywords = ["nhp", "diffusion mri", "processing"]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Science/Research",
  "Topic :: Scientific/Engineering",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12"
]

[project.urls]
Repository = "https://github.com/HumanBrainED/nhp-dwiproc"

[project.scripts]
nhp_dwiproc = "nhp_dwiproc.cli:app"

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
  "pytest>=8.4.2",
  "mypy>=1.17.1",
  "pre-commit>=4.3.0",
  "pytest-cov>=7.0.0",
  "ruff>=0.13.2",
  "types-pyyaml>=6.0.12.20250822"
]

[tool.hatch.build]
source = ["src/"]

[tool.hatch.build.hooks.vcs]
version-file = "src/nhp_dwiproc/_version.py"

[tool.hatch.version]
source = "vcs"

[tool.pytest.ini_options]
pythonpath = ["src"]
testpaths = ["tests"]

[tool.coverage.report]
omit = [
  # Ignore testing requiring imaging data
  "src/nhp_dwiproc/cli/main.py",
  "src/nhp_dwiproc/app/analysis_levels/**",
  "src/nhp_dwiproc/app/lib/anat.py",
  "src/nhp_dwiproc/app/lib/dwi.py",
  "src/nhp_dwiproc/app/workflow/**"
]
exclude_also = [
  "@overload",
  "def _.*\\("  # Ignore private methods
]

[tool.mypy]
allow_redefinition = true
ignore_missing_imports = true

[tool.ruff]
line-length = 88
indent-width = 4
src = ["src"]
target-version = "py311"

[tool.ruff.lint]
select = ["ANN", "D", "E", "F", "I"]
ignore = [
  "ANN002",  # Missing *args annotation
  "ANN003",  # Missing **kwargs annotated.
  "ANN401"  # 'Any' typehint
]
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
  "ANN201",  # Missing return type
  "D100",  # Missing module docstring
  "D102"  # Missing method docstring
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
